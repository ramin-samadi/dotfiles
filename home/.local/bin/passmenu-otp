#!/usr/bin/env bash

# Array of dependencies
dependencies=("dmenu" "pass" "xdotool" "grep")

# Function to check if a dependency is installed
check_dependency() {
	if pacman -Qs "$1" >/dev/null 2>&1; then
		return 0
	else
		return 1
	fi
}

# Variable to track if all dependencies are installed
all_dependencies_installed=true

# Iterate over dependencies and check if they are installed
for dependency in "${dependencies[@]}"; do
	if ! check_dependency "$dependency"; then
		all_dependencies_installed=false
		break
	fi
done

# If all dependencies are already installed, exit the script
if [ "$all_dependencies_installed" == false ]; then
	# Check if a package manager is available
	if command -v paru >/dev/null 2>&1; then
		package_manager="paru"
	elif command -v yay >/dev/null 2>&1; then
		package_manager="yay"
	else
		echo "Neither yay nor paru package managers are installed."
		exit 1
	fi

	# Install missing dependencies
	for dependency in "${dependencies[@]}"; do
		if ! check_dependency "$dependency"; then
			if [ "$package_manager" == "yay" ]; then
				yay -Syu --needed --noconfirm "$dependency"
			elif [ "$package_manager" == "paru" ]; then
				paru -Syu --needed --noconfirm "$dependency"
			else
				exit 1
			fi
		fi
	done
fi

shopt -s nullglob globstar

typeit=0
if [[ $1 == "--type" ]]; then
	typeit=1
	shift
fi

prefix=${PASSWORD_STORE_DIR-~/.password-store}
password_files=("$prefix"/**/*.gpg)
password_files=("${password_files[@]#"$prefix"/}")
password_files=("${password_files[@]%.gpg}")

password=$(printf '%s\n' "${password_files[@]}" | dmenu -p "î¬‘" "$@")

[[ -n $password ]] || exit

pass_cmd=show
if pass show "$password" | grep -q '^otpauth://'; then
	pass_cmd=otp
fi

if [[ $typeit -eq 0 ]]; then
	pass $pass_cmd -c "$password" 2>/dev/null
else
	pass $pass_cmd "$password" | {
		IFS= read -r pass
		printf %s "$pass"
	} |
		xdotool type --clearmodifiers --file -
fi
