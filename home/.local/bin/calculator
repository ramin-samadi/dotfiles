#!/usr/bin/env bash

# Array of dependencies
dependencies=("bc" "dmenu" "xclip")

# Function to check if a dependency is installed
check_dependency() {
	if pacman -Qs "$1" >/dev/null 2>&1; then
		return 0
	else
		return 1
	fi
}

# Variable to track if all dependencies are installed
all_dependencies_installed=true

# Iterate over dependencies and check if they are installed
for dependency in "${dependencies[@]}"; do
	if ! check_dependency "$dependency"; then
		all_dependencies_installed=false
		break
	fi
done

# If all dependencies are already installed, exit the script
if [ "$all_dependencies_installed" == false ]; then
	# Check if a package manager is available
	if command -v yay >/dev/null 2>&1 && command -v paru >/dev/null 2>&1; then
		echo "Dependencies missing, please choose which one you want to use (yay/paru) to install them:"
		read -r package_manager
	elif command -v yay >/dev/null 2>&1; then
		package_manager="yay"
	elif command -v paru >/dev/null 2>&1; then
		package_manager="paru"
	else
		echo "Neither yay nor paru package managers are installed."
		exit 1
	fi

	# Install missing dependencies
	for dependency in "${dependencies[@]}"; do
		if ! check_dependency "$dependency"; then
			if [ "$package_manager" == "yay" ]; then
				yay -Syu "$dependency"
			elif [ "$package_manager" == "paru" ]; then
				paru -Syu "$dependency"
			else
				exit 1
			fi
		fi
	done
fi

# https://github.com/onespaceman/menu-calc
# Calculator for use with rofi/dmenu(2)
# Copying to the clipboard requires xclip

usage() {
	echo "$(tput bold)menu-calc$(tput sgr0)"
	echo "A calculator for Rofi/dmenu(2)"
	echo
	echo "$(tput bold)Usage:$(tput sgr0)"
	echo "    = 4+2"
	echo "    = (4+2)/(4+3)"
	echo "    = 4^2"
	echo "    = sqrt(4)"
	echo "    = c(2)"
	echo
	echo "$(tput bold)Force Rofi/dmenu(2):$(tput sgr0)"
	echo "By default, if rofi exists, it will be used. To force menu-calc to"
	echo "use one or the other, use the --dmenu argument"
	echo
	echo "    = --dmenu=<dmenu_executable>"
	echo
	echo "$(tput bold)Passing arguments to Rofi/dmenu(2):$(tput sgr0)"
	echo "Any parameters after ' -- ' will be passed to Rofi/dmenu(2)."
	echo
	echo "    = -- <Rofi/dmenu(2) args>"
	echo
	echo "The answer can be copied to the clipboard and used for further calculations inside (or outside) Rofi/dmenu."
	echo
	echo "If launched outside of Rofi/dmenu the expression may need quotation marks."
	exit
}

# Process CLI parameters
for var in "$@"; do
	case $var in
	-h | --help) usage ;;
	-d=* | --dmenu=*)
		menu=$(echo "$var" | cut -d'=' -f 2)
		;;
	--) break ;;
	esac
done

# Grab the answer
answer=$(echo "$1" | bc -l | sed '/\./ s/\.\{0,1\}0\{1,\}$//')

# Path to menu application
if [ -z "${menu+1}" ]; then
	if [[ -n $(command -v rofi) ]]; then
		menu="$(command -v rofi)"
	elif [[ -n $(command -v dmenu) ]]; then
		menu=$(command -v dmenu)
	else
		echo >&2 "Rofi or dmenu not found"
		exit
	fi
fi

# If using rofi, add the necessary parameters
if [[ $menu == "rofi" || $menu == $(command -v rofi) ]]; then
	menu="$menu -dmenu -lines 3"
elif [[ $menu == "dmenu" || $menu == $(command -v dmenu) ]]; then
	menu="$menu ""$DMENU_OPTIONS"
fi

# Determine args to pass to dmenu/rofi
while [[ $# -gt 0 && $1 != "--" ]]; do
	shift
done
[[ $1 == "--" ]] && shift

action=$(echo -e "\n+\n-\n*\n%\n^\n==\n!=\n>\n>=\n<\n<=\n&&\n||\nsqrt()\ns(x*3.14159265359/180)\ns(x*4*a(1)/180)/c(x*4*a(1)/180)\nc(x*3.14159265359/180)" | $menu "$@" -p "= $answer")
echo -n "$answer" | xclip -selection clipboard

case $action in
"") $0 "--dmenu=$menu" "--" "$@" ;;
"") ;;
*) $0 "$answer $action" "--dmenu=$menu" "--" "$@" ;;
esac
