#!/usr/bin/env bash

# Array of dependencies
dependencies=("xdotool" "libnotify")

# Function to check if a dependency is installed
check_dependency() {
	if pacman -Qs "$1" >/dev/null 2>&1; then
		return 0
	else
		return 1
	fi
}

# Variable to track if all dependencies are installed
all_dependencies_installed=true

# Iterate over dependencies and check if they are installed
for dependency in "${dependencies[@]}"; do
	if ! check_dependency "$dependency"; then
		all_dependencies_installed=false
		break
	fi
done

# If all dependencies are already installed, exit the script
if [ "$all_dependencies_installed" == false ]; then
	# Check if a package manager is available
	if command -v paru >/dev/null 2>&1; then
		package_manager="paru"
	elif command -v yay >/dev/null 2>&1; then
		package_manager="yay"
	else
		echo "Neither yay nor paru package managers are installed."
		exit 1
	fi

	# Install missing dependencies
	for dependency in "${dependencies[@]}"; do
		if ! check_dependency "$dependency"; then
			if [ "$package_manager" == "yay" ]; then
				yay -Syu --needed --noconfirm "$dependency"
			elif [ "$package_manager" == "paru" ]; then
				paru -Syu --needed --noconfirm "$dependency"
			else
				exit 1
			fi
		fi
	done
fi

if [[ "$1" == "--start" || "$1" == "-s" ]]; then
	notify-send "auto clicker" "started"
	while true; do
		xdotool click --delay "$2" 1
	done
elif [[ "$1" == "--quit" || "$1" == "-q" ]]; then
	notify-send "auto clicker" "stopped"
	ps f -u "$USER" | grep -i auto-clicker | awk '{print $1}' | xargs kill
else
	echo -e "USAGE: auto-clicker \033[32m[-s|--start]\033[0m | \033[31m[-q|--quit]\033[0m DELAY (ms) \nEXAMPLE: auto-clicker --start 1000 && auto-clicker --quit"
fi
