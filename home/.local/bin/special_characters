#!/usr/bin/env bash

# Array of dependencies
dependencies=("dmenu" "xclip" "xdotool")

# Function to check if a dependency is installed
check_dependency() {
	if pacman -Qs "$1" >/dev/null 2>&1; then
		return 0
	else
		return 1
	fi
}

# Variable to track if all dependencies are installed
all_dependencies_installed=true

# Iterate over dependencies and check if they are installed
for dependency in "${dependencies[@]}"; do
	if ! check_dependency "$dependency"; then
		all_dependencies_installed=false
		break
	fi
done

# If all dependencies are already installed, exit the script
if [ "$all_dependencies_installed" == false ]; then
	# Check if a package manager is available
	if command -v paru >/dev/null 2>&1; then
		package_manager="paru"
	elif command -v yay >/dev/null 2>&1; then
		package_manager="yay"
	else
		echo "Neither yay nor paru package managers are installed."
		exit 1
	fi

	# Install missing dependencies
	for dependency in "${dependencies[@]}"; do
		if ! check_dependency "$dependency"; then
			if [ "$package_manager" == "yay" ]; then
				yay -Syu --needed --noconfirm "$dependency"
			elif [ "$package_manager" == "paru" ]; then
				paru -Syu --needed --noconfirm "$dependency"
			else
				exit 1
			fi
		fi
	done
fi

symbols=(
	"\$ dollar sign"
	"€ euro sign"
	"{} curly brackets"
	"[] square brackets"
	"\ backslash"
	"≈ approximately"
	"´´ accent"
	"@ at"
	"| pipe"
	"> greater than"
	"< less than"
	"^ caret"
	"∼ squigly"
)

# Get the user's choice using dmenu
selected_symbol=$(printf '%s\n' "${symbols[@]}" | dmenu -p "")

# Use a case statement to perform the appropriate action based on the user's choice
case "$selected_symbol" in
"\$ dollar sign")
	echo "\$" | tr -d '\n' | xclip -selection clipboard && xdotool key --clearmodifiers ctrl+shift+v
	;;
"€ euro sign")
	echo "£" | tr -d '\n' | xclip -selection clipboard && xdotool key --clearmodifiers ctrl+shift+v
	;;
"{} curly brackets")
	echo "{}" | tr -d '\n' | xclip -selection clipboard && xdotool key --clearmodifiers ctrl+shift+v
	;;
"[] square brackets")
	echo "[]" | tr -d '\n' | xclip -selection clipboard && xdotool key --clearmodifiers ctrl+shift+v
	;;
"\ backslash")
	echo "\\" | tr -d '\n' | xclip -selection clipboard && xdotool key --clearmodifiers ctrl+shift+v
	;;
"@ at")
	echo "@" | tr -d '\n' | xclip -selection clipboard && xdotool key --clearmodifiers ctrl+shift+v
	;;
"≈ approximately")
	echo "≈" | tr -d '\n' | xclip -selection clipboard && xdotool key --clearmodifiers ctrl+shift+v
	;;
"´´ accent")
	echo "´´" | tr -d '\n' | xclip -selection clipboard && xdotool key --clearmodifiers ctrl+shift+v
	;;
"| pipe")
	echo "|" | tr -d '\n' | xclip -selection clipboard && xdotool key --clearmodifiers ctrl+shift+v
	;;
"> greater than")
	echo ">" | tr -d '\n' | xclip -selection clipboard && xdotool key --clearmodifiers ctrl+shift+v
	;;
"< less than")
	echo "<" | tr -d '\n' | xclip -selection clipboard && xdotool key --clearmodifiers ctrl+shift+v
	;;
"^ caret")
	echo "^" | tr -d '\n' | xclip -selection clipboard && xdotool key --clearmodifiers ctrl+shift+v
	;;
"∼ squigly")
	echo "∼" | tr -d '\n' | xclip -selection clipboard && xdotool key --clearmodifiers ctrl+shift+v
	;;
esac
